<?php

namespace Qbhy\AcrCloud;

class Http extends \Hanson\Foundation\Http
{
    private $api;

    private $signatureVersion = '1';

    /**
     * Http constructor.
     */
    public function __construct(Api $api)
    {
        $this->api = $api;
    }

    public function getDataTypeString()
    {
        return $this->api->getDataType() ? $this->api->getDataType() . "\n" : '';
    }

    public function request($method, $url, $options = [])
    {
        $method           = strtoupper($method);
        $accessKey        = $this->api->getAccessKey();
        $secretKey        = $this->api->getSecretKey();
        $timestamp        = time();
        $uri              = $url;
        $signatureVersion = $this->signatureVersion;
        $signatureString  = $method . "\n" . $uri . "\n" . $accessKey . "\n" . $this->getDataTypeString() . $signatureVersion . "\n" . $timestamp;
        $signature        = base64_encode(hash_hmac("sha1", $signatureString, $secretKey, true));

        $authMetadata = [
            'access-key'        => $accessKey,
            'signature'         => $signature,
            'signature-version' => $signatureVersion,
            'timestamp'         => $timestamp,
        ];

        if (method_exists($this->api, 'handleAuthMetadata')) {
            $this->api->handleAuthMetadata($options, [
                "access_key"        => $accessKey,
                "signature"         => $signature,
                "signature_version" => $signatureVersion,
                "timestamp"         => $timestamp
            ]);
        } else {
            $options['headers'] = array_merge($options['headers'] ?? [], $authMetadata);
        }


        return parent::request($method, $this->api->getHost() . $url, $options); // TODO: Change the autogenerated stub
    }

    public function delete($url, array $options = [])
    {
        return $this->request('DELETE', $url, $options);
    }
}